version: '3.7'

services:
  db:
    build:
      context: ./db
      args:
        POSTGRES_USERNAME: ${POSTGRES_USERNAME}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
  redis:
    build: ./redis
    restart: always
  mongo:
    build:
      context: ./mongo
      args:
        MONGODB_USERNAME: ${MONGODB_USERNAME}
        MONGODB_PASSWORD: ${MONGODB_PASSWORD}
    restart: always
  rabbitmq:
    build:
      context: ./rabbitmq
      args:
        RABBITMQ_COOKIE: ${RABBITMQ_COOKIE}
        RABBITMQ_USERNAME: ${RABBITMQ_USERNAME}
        RABBITMQ_PASSWORD: ${RABBITMQ_PASSWORD}
    hostname: rabbitmq
    restart: always
    ports:
      - 15672:15672
  api:
    build:
      context: ./api
      shm_size: '2gb'
    restart: always
    volumes:
      - ./certs:/root/certs
      - ./api/src:/root/src
    depends_on:
      - db
      - redis
      - rabbitmq
      - storage
    environment:
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - MINIO_USERNAME=${MINIO_USERNAME}
      - MINIO_PASSWORD=${MINIO_PASSWORD}
      - MAIL_ADDRESS=${MAIL_ADDRESS}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_HOST=${MAIL_HOST}
      - ADMIN_MAIL=${ADMIN_MAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - NODE_ENV=${NODE_ENV}
    ports:
      - 80:80
  delivery:
    build: ./delivery
    restart: always
    volumes:
      - ./certs:/root/certs
      - ./delivery/cmd:/root/cmd
      - ./delivery/pkg:/root/pkg
      - ./delivery/docs:/root/docs
      - ./delivery/public:/root/public
    depends_on:
      - mongo
      - mock-api
    environment:
      - MONGODB_USERNAME=${MONGODB_USERNAME}
      - MONGODB_PASSWORD=${MONGODB_PASSWORD}
      - RABBITMQ_USERNAME=${RABBITMQ_USERNAME}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - APP_ORIGIN=${APP_ORIGIN}
      - ADMIN_MAIL=${ADMIN_MAIL}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    ports:
      - 8080:8080
  app:
    build: ./app
    restart: always
    volumes:
      - ./app/src:/app/src
      - ./app/public:/app/public
    depends_on:
      - api
      - delivery
    environment:
      - NODE_ENV=${NODE_ENV}
    ports:
      - 3000:3000
  mock-api:
    build: ./mock-api
    restart: always
    volumes:
      - ./mock-api/src:/root/src
    ports:
      - 9090:9090
  storage:
    build:
      context: ./storage
      args:
        MINIO_USERNAME: ${MINIO_USERNAME}
        MINIO_PASSWORD: ${MINIO_PASSWORD}
    restart: always
    ports:
      - 9000:9000
