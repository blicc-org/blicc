stages:
  - build
  - test
  - deploy

build:
  stage: build
  image: docker:git
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t app ./app
    - docker build --build-arg POSTGRES_PASSWORD=$POSTGRES_PASSWORD -t api ./api
    - docker build --build-arg POSTGRES_PASSWORD=$POSTGRES_PASSWORD -t db ./db
    - docker build -t delivery ./delivery

    ## tag and deploy for testing stage
    - docker tag api $REGISTRY_DOMAIN/repo/$REPO/api-testing-stage
    - docker tag db $REGISTRY_DOMAIN/repo/$REPO/db-testing-stage
    - docker push $REGISTRY_DOMAIN/repo/$REPO/api-testing-stage
    - docker push $REGISTRY_DOMAIN/repo/$REPO/db-testing-stage

    ## tag for production
    - docker tag api $REGISTRY_DOMAIN/repo/$REPO/api
    - docker tag db $REGISTRY_DOMAIN/repo/$REPO/db
    - docker tag app $REGISTRY_DOMAIN/repo/$REPO/app
    - docker tag delivery $REGISTRY_DOMAIN/repo/$REPO/delivery

test:
  stage: test
  image: node:12
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - scp -r ./docker-compose.test.yml root@$TEST_IP:/root/docker-compose.yml
    # - ssh -tt root@$TEST_IP "docker image prune -a -f"
    # - ssh -tt root@$TEST_IP "export MAIL_ADDRESS=$MAIL_ADDRESS MAIL_PASSWORD=$MAIL_PASSWORD MAIL_HOST=$MAIL_HOST && docker-compose pull && docker-compose down && docker-compose up -d --force-recreate --remove-orphans"
    # - yarn
    # - yarn --cwd 'api' cross-env API_TEST_TARGET=$API_TESTS_TARGET jest

deploy:
  stage: deploy
  image: docker:git
  only:
    - master
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - docker push $REGISTRY_DOMAIN/repo/$REPO/api
    - docker push $REGISTRY_DOMAIN/repo/$REPO/db
    - docker push $REGISTRY_DOMAIN/repo/$REPO/app
    - docker push $REGISTRY_DOMAIN/repo/$REPO/delivery
    - scp -r ./docker-compose.yml root@$PROD_IP:/root/
    - ssh -tt root@$PROD_IP "docker image prune -a -f"
    - ssh -tt root@$PROD_IP "export MAIL_ADDRESS=$MAIL_ADDRESS MAIL_PASSWORD=$MAIL_PASSWORD MAIL_HOST=$MAIL_HOST && docker-compose pull && docker-compose down && docker-compose up -d --force-recreate --remove-orphans"
